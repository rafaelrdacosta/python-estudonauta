Módulo 3 - Estruturas Compostas

Tuplas -> ()
Listas -> []
Dicionários -> {}

1) Tuplas
    - É um quantidade de valores separados por vírgula.
    - Elas podem ser com ou sem parênteses, embora frenquentemente os parênteses sejam necessários.
    - Não é possível atribuir valores a itens individuais.
    - Tuplas são IMUTÁVEIS e normalmente contêm uma sequência HETEROGÊNEA de itens, que são acessados
por seus índices.
    - O índice começa em zero

    empty = () ->tupla vazia
    lanche = 'sanduiche', 'suco', 'pizza', 'pudim'

    print(lanche)                                           #saída: ('sanduiche', 'suco', 'pizza', 'pudim')
    print(sorted(lanche))                                   #saída: ['pizza', 'pudim', 'sanduiche', 'suco']
    print(lanche[2]) -> pizza
    print(lanche[0:2]) -> ('sanduiche', 'suco')             #vai excluir o último elemento
    print(lanche[1:]) -> ('suco', 'pizza', 'pudim')
    print(lanche[:2]) -> ('sanduiche', 'suco')              #vai excluir o último elemento
    print(lanche[-1]) -> pudim                              #a contagem será do fim para o início
    print(len(lanche)) -> 4                                 #retorna a quantidade de elementos da tupla

    for c in lanche:                                        #será criado uma variável simples c que a cada iteração receberá o valor do item
        print(c)                                            #saída será: sanduiche\n suco\n pizza\n pudim

    for cont in range (0, len(lanche)):
        print(lanche[cont])                                 #saída será: sanduiche\n suco\n pizza\n pudim

    for pos, comida in enumerate(lanche):
        print(f'Eu vou comer {comida} na posição {pos}')    #saída 1ª iteração: Eu vou comer sanduiche na posição 0

    a = (2, 5, 4)
    b = (5, 8, 1, 2)
    c = a + b                                               #serão concatenadas as duas tuplas
    print(c)                                                #saída: (2, 5, 4, 5, 8, 1, 2)

    Método count - irá contar a ocorrência do parâmetro passado na tupla
        print(c.count(5))                                       #saída será 2

    Método index - irá retornar o índice da primeira ocorrência parâmetro passado
        print(c.index(5))                                       #saída será 1
        print(c.index(5,2))                                     #usando o deslocamento a partir do índice 2 a saída será 3

        numeros = (2, 6, 9, 3)
        if 3 in numeros: #para não dar erro no método index tem que ser verificado antes se há o número está na tupla
            print(f'O valor 3 apareceu na {numeros.index(3) + 1}ª posição.')
        else:
            print('O número 3 não foi digitado em nenhuma posição.')


    Exemplo de sequência heterogênea - tipos diferentes
        pessoa = ('Rafael', 44, 'M', 91.2)

    Apagar uma variável
        del(pessoa)

    Exemplo de concatenação de valores em uma tupla

    numeros = ()
    print('Os valores sorteados foram: ', end=' ')
        for c in range(0, 5):
    n = randint(1, 10)
    #Concatenação: cria-se uma nova tupla que irá receber os novos Elm
    # A vírgula (n,) é crucial para que o Python trate 'n' como uma tupla de um único item.
    numeros += (n, )
    print(n, end=' ')

    print(f'\nO maior valor sorteado foi {max(numeros)}.')
    print(f'O menor valor sorteado foi {min(numeros}.')














































































































































































































































































































































































































